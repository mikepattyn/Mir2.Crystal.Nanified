name: Build and deploy
on:
  push:
    branches: [ main ]
jobs:
  explorer:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        node-version: [16.16]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install NPM packages
        run: npm install
        working-directory: src/Server/Server.Admin
        
      - name: Install the Angular CLI
        run: npm install -g @angular/cli
        working-directory: src/Server/Server.Admin

      - name: Build the Angular webapp
        run: ng build
        working-directory: src/Server/Server.Admin

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./src/Server/Server.Admin/Dockerfile
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mir2-explorer:latest
          push: true
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          content: ${{ github.repository }}
          embed-title: "Deployed Mir2.Explorer"
          embed-description: ${{ github.owner }}
          embed-footer-text: ${{ github.repository_owner }}
          embed-author-name: ${{ github.actor }}

  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [net6]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mir2-backend:latest
          push: true
        env:
          ConnectionStrings__Mir2Db: Data Source=Development.Mir2.db

      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          content: ${{ github.repository }}
          embed-title: "Deployed Mir2.Backend"
          embed-description: ${{ github.owner }}
          embed-footer-text: ${{ github.repository_owner }}
          embed-author-name: ${{ github.actor }}